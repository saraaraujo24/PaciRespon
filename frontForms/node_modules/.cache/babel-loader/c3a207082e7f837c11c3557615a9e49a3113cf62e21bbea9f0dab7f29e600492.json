{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms - Copia\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Box, HStack, Input, Button } from \"@chakra-ui/react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [_id, setSelectedId] = useState(\"\");\n  const [answers, setAnswers] = useState([]);\n  const [infoPaciente, setInfoPaciente] = useState({});\n  const isSubmitDisabled = answers.some(a => !a.trim()); // Disable button if any answer is empty\n  const answersRefs = useRef([]);\n  useEffect(() => {\n    answersRefs.current = Array(posts.length).fill(null); // Initialize refs on post change\n  }, [posts]);\n  useEffect(() => {\n    if (_id) {\n      fetchQuestions(_id);\n    }\n  }, [_id]);\n  const fetchQuestions = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question.pergunta));\n      setPosts(questionList.flat());\n      setAnswers(Array(questionList.length).fill(\"\")); // Initialize answers with empty strings\n\n      // Access and store infoPaciente from the response\n      const {\n        infoPaciente\n      } = response.data[0]; // Assuming infoPaciente is in the first object\n      setInfoPaciente(infoPaciente);\n    } catch (error) {\n      // Handle errors here\n    }\n  };\n  const handleIdChange = event => {\n    setSelectedId(event.target.value);\n  };\n  const handleAnswerChange = (index, answer) => {\n    setAnswers(prevAnswers => [...prevAnswers.slice(0, index), answer, ...prevAnswers.slice(index + 1)]);\n  };\n  async function handleSubmit() {\n    const selectedId = _id; // Assuming _id is used for identification\n\n    const dataToSend = posts.map((pergunta, index) => ({\n      pergunta: pergunta,\n      // Use corrected field name 'pergunta'\n      resposta: answers[index]\n    }));\n    try {\n      const response = await axios.post(\"http://localhost:8005/response\", {\n        infoPaciente,\n        _id: selectedId,\n        responses: dataToSend\n      });\n      console.log(\"Respostas salvas com sucesso!\", response.data);\n      // Clear answers and refetch data to display thank you message\n      setAnswers([]);\n      setSelectedId(\"\");\n      alert(\"Obrigada pelas respostas!\");\n      // Use window.location.reload(true) to fully reload the page\n      window.location.reload(true);\n    } catch (error) {\n      console.error(error);\n      // Handle errors, e.g., display error messages\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 8,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        ml: \"5%\",\n        mt: \"5%\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          className: \"wrap-input\",\n          id: \"cpfInput\",\n          value: _id,\n          onChange: handleIdChange,\n          placeholder: \"Enter _id to fetch data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [posts.map((question, index) => {\n        var _answersRefs$current$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [question, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: el => answersRefs.current[index] = el // Use ref for uncontrolled input\n            ,\n            type: ((_answersRefs$current$ = answersRefs.current[index]) === null || _answersRefs$current$ === void 0 ? void 0 : _answersRefs$current$.type) || \"text\" // Handle potential undefined type\n            ,\n            onChange: e => handleAnswerChange(index, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        isDisabled: isSubmitDisabled,\n        onClick: handleSubmit,\n        children: \"Enviar Todas as Respostas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ubRPuakYDA0I98oolDIavrv+zkY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","HStack","Input","Button","useEffect","useState","useRef","axios","jsxDEV","_jsxDEV","App","_s","posts","setPosts","_id","setSelectedId","answers","setAnswers","infoPaciente","setInfoPaciente","isSubmitDisabled","some","a","trim","answersRefs","current","Array","length","fill","fetchQuestions","id","response","get","questionList","data","map","post","selectedQuestions","question","pergunta","flat","error","handleIdChange","event","target","value","handleAnswerChange","index","answer","prevAnswers","slice","handleSubmit","selectedId","dataToSend","resposta","responses","console","log","alert","window","location","reload","children","spacing","w","ml","mt","className","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_answersRefs$current$","ref","el","type","e","isDisabled","onClick","textAlign","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms - Copia/frontForms/src/App.js"],"sourcesContent":["import { Box, HStack, Input,  Button} from \"@chakra-ui/react\";\r\nimport  { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [_id, setSelectedId] = useState(\"\");\r\n  const [answers, setAnswers] = useState([]);\r\n  const [infoPaciente, setInfoPaciente] = useState({});\r\n  const isSubmitDisabled = answers.some((a) => !a.trim()); // Disable button if any answer is empty\r\n  const answersRefs = useRef([]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    answersRefs.current = Array(posts.length).fill(null); // Initialize refs on post change\r\n  }, [posts]);\r\n\r\n  useEffect(() => {\r\n    if (_id) {\r\n      fetchQuestions(_id);\r\n    }\r\n  }, [_id]);\r\n\r\n\r\n  const fetchQuestions = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\r\n      const questionList = response.data.map((post) =>\r\n        post.selectedQuestions.map((question) => question.pergunta)\r\n      );\r\n      setPosts(questionList.flat());\r\n      setAnswers(Array(questionList.length).fill(\"\")); // Initialize answers with empty strings\r\n\r\n      // Access and store infoPaciente from the response\r\n      const { infoPaciente } = response.data[0]; // Assuming infoPaciente is in the first object\r\n      setInfoPaciente(infoPaciente);\r\n    } catch (error) {\r\n      // Handle errors here\r\n    }\r\n  };\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n  };\r\n\r\n  const handleAnswerChange = (index, answer) => {\r\n    setAnswers((prevAnswers) => [\r\n      ...prevAnswers.slice(0, index),\r\n      answer,\r\n      ...prevAnswers.slice(index + 1),\r\n    ]);\r\n  };\r\n\r\n  async function handleSubmit() {\r\n\r\n    const selectedId = _id; // Assuming _id is used for identification\r\n\r\n    const dataToSend = posts.map((pergunta, index) => ({\r\n      pergunta: pergunta, // Use corrected field name 'pergunta'\r\n      resposta: answers[index],\r\n    }));\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8005/response\", {\r\n        infoPaciente,\r\n        _id: selectedId,\r\n        responses: dataToSend,\r\n      });\r\n\r\n      console.log(\"Respostas salvas com sucesso!\", response.data);\r\n      // Clear answers and refetch data to display thank you message\r\n      setAnswers([]);\r\n      setSelectedId(\"\");\r\n       alert(\"Obrigada pelas respostas!\");\r\n      // Use window.location.reload(true) to fully reload the page\r\n      window.location.reload(true);\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle errors, e.g., display error messages\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HStack spacing={8}>\r\n        <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n          <Input\r\n            className=\"wrap-input\"\r\n            id=\"cpfInput\"\r\n            value={_id}\r\n            onChange={handleIdChange}\r\n            placeholder=\"Enter _id to fetch data\"\r\n          />\r\n        </Box>\r\n      </HStack>\r\n\r\n     {posts.length > 0 ? (\r\n        <div>\r\n          {posts.map((question, index) => (\r\n            <div key={index}>\r\n              {question}\r\n              <br />\r\n              <input\r\n                ref={(el) => (answersRefs.current[index] = el)} // Use ref for uncontrolled input\r\n                type={answersRefs.current[index]?.type || \"text\"} // Handle potential undefined type\r\n                onChange={(e) => handleAnswerChange(index, e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n          \r\n      <Button isDisabled={isSubmitDisabled} onClick={handleSubmit}>\r\n            Enviar Todas as Respostas\r\n      </Button>\r\n        </div>\r\n      ) : (\r\n        <Box textAlign=\"center\">Loading...</Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}