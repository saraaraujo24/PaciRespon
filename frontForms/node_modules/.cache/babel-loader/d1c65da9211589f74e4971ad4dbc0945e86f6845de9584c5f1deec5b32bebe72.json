{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms - Copia\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchedCpf, setSearchedCpf] = useState('');\n  const [posts, setPosts] = useState([]);\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(`/PerguntaSelecionadaPacientes/cpf/${searchedCpf}`);\n      setPosts(response.data); // Update state with fetched data\n    } catch (error) {\n      console.error(error);\n      alert('Error fetching data!');\n    }\n  };\n  app.get('/PerguntaSelecionadaPacientes/cpf/:cpf', async (req, res) => {\n    try {\n      const {\n        cpf\n      } = req.params; // Extract CPF from URL\n\n      const posts = await Perguntas.find({\n        infoPaciente: {\n          $elemMatch: {\n            cpf\n          }\n        }\n      }); // Filter by CPF in infoPaciente array\n\n      if (!posts || posts.length === 0) {\n        res.status(404).json({\n          message: 'No perguntas found for given CPF'\n        });\n        return;\n      }\n      res.json(posts);\n    } catch (err) {\n      console.error(err);\n      res.status(500).json({\n        error: 'Error retrieving data'\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Colum\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cont\",\n        children: [/*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Selecionar Pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter CPF\",\n          onChange: e => setSearchedCpf(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.pergunta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.infoPaciente.map(info => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [info.cpf, \": \", info.otherInfo]\n                }, info.cpf, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 25\n              }, this)]\n            }, post._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No perguntas found for this CPF.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3LRhligt+k9Suv40iQVPawTVwJU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","searchedCpf","setSearchedCpf","posts","setPosts","handleSearch","response","get","data","error","console","alert","app","req","res","cpf","params","Perguntas","find","infoPaciente","$elemMatch","length","status","json","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","map","post","pergunta","info","otherInfo","_id","onClick","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms - Copia/frontForms/src/App.js"],"sourcesContent":["\r\nimport { useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nimport \"./App.css\"\r\n\r\n\r\nfunction App(){\r\n\r\n  const [searchedCpf, setSearchedCpf] = useState('');\r\n  const [posts, setPosts] = useState([]);\r\n\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await axios.get(`/PerguntaSelecionadaPacientes/cpf/${searchedCpf}`);\r\n  \r\n      setPosts(response.data); // Update state with fetched data\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error fetching data!');\r\n    }\r\n  };\r\n\r\n  \r\n  app.get('/PerguntaSelecionadaPacientes/cpf/:cpf', async (req, res) => {\r\n    try {\r\n      const { cpf } = req.params; // Extract CPF from URL\r\n  \r\n      const posts = await Perguntas.find({ infoPaciente: { $elemMatch: { cpf } } }); // Filter by CPF in infoPaciente array\r\n  \r\n      if (!posts || posts.length === 0) {\r\n        res.status(404).json({ message: 'No perguntas found for given CPF' });\r\n        return;\r\n      }\r\n  \r\n      res.json(posts);\r\n    } catch (err) {\r\n      console.error(err);\r\n      res.status(500).json({ error: 'Error retrieving data' });\r\n    }\r\n  });\r\n  \r\n\r\n  return(\r\n    <div className=\"App\" >  \r\n    <div  className=\"Colum\"> \r\n      <div className=\"cont\">\r\n          <center><h2  >Selecionar Pergunta</h2></center>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter CPF\"\r\n                onChange={(e) => setSearchedCpf(e.target.value)}\r\n              />\r\n            <div>\r\n\r\n            {posts.length > 0 ? (\r\n                  <div>\r\n                    {posts.map((post) => (\r\n                      <div key={post._id}>\r\n                        <p>{post.pergunta}</p>\r\n                        <p>{post.infoPaciente.map((info) => (\r\n                          <p key={info.cpf}>{info.cpf}: {info.otherInfo}</p>\r\n                        ))}</p>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <p>No perguntas found for this CPF.</p>\r\n                )}\r\n\r\n              </div> \r\n          \r\n            </div>\r\n            <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}