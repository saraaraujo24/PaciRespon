{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms - Copia\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Box, HStack, Input, List, ListItem } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [selectedId, setSelectedId] = useState(\"\");\n  const [answers, setAnswers] = useState([]);\n  // console.log(answers)\n\n  useEffect(() => {\n    if (selectedId) {\n      fetchQuestions(selectedId);\n    }\n  }, [selectedId]);\n  const fetchQuestions = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question.pergunta));\n      setPosts(questionList.flat()); // Flatten nested arrays if necessary\n    } catch (error) {\n      // Handle errors here (e.g., display an error message)\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n  const handleIdChange = event => {\n    setSelectedId(event.target.value);\n  };\n  const handleAnswerChange = (index, answer) => {\n    // Access the answer object using the index\n    const updatedAnswers = [...answers];\n    updatedAnswers[index].answer = answer;\n    setAnswers(updatedAnswers);\n  };\n  async function handleSubmit() {\n    const answers = posts.map((question, index) => ({\n      question,\n      answer: document.querySelector(`input[data-question-index=\"${index}\"]`).value\n    }));\n    try {\n      await axios.post('http://localhost:8005/response', {\n        resposta: answers\n      });\n      console.log('Respostas salvas com sucesso!');\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 8,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        ml: \"5%\",\n        mt: \"5%\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          className: \"wrap-input\",\n          id: \"cpfInput\",\n          value: selectedId,\n          onChange: handleIdChange,\n          placeholder: \"Enter _id to fetch data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n      spacing: 3,\n      children: [posts.map((question, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [question, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"space\",\n          type: \"text\",\n          placeholder: \"Digite sua resposta...\",\n          value: answers.answers || '',\n          \"data-question-index\": index\n          // Pass the answer object\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 12\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onChange: e => handleAnswerChange(e.target.value),\n        children: \"en\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uIcK6J27qAXb5t1bIR4S2I1q/Tw=\");\n_c = App;\nexport default App;\n\n/*import { Box, HStack, Input, List, ListItem } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  const [resposta, setResposta] = useState('');\r\n   console.log(resposta)\r\n  \r\n  useEffect(() => {\r\n    if (selectedId) {\r\n      fetchQuestions(selectedId);\r\n    }\r\n  }, [selectedId]);\r\n\r\n  const fetchQuestions = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\r\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question.pergunta));\r\n      setPosts(questionList.flat()); // Flatten nested arrays if necessary\r\n    } catch (error) {\r\n      // Handle errors here (e.g., display an error message)\r\n      console.error(\"Error fetching questions:\", error);\r\n    }\r\n  };\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n  };\r\n\r\n\r\n\r\n\r\n  async function handleSubmit() {\r\n \r\n    const response = resposta\r\n  try{\r\n    await axios.post('http://localhost:8005/response', {  \r\n      resposta:response,\r\n    });\r\n      console.log('Respostas salvas com sucesso!');\r\n \r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <HStack spacing={8}>\r\n        <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n          <Input\r\n            className=\"wrap-input\"\r\n            id=\"cpfInput\"\r\n            value={selectedId}\r\n            onChange={handleIdChange}\r\n            placeholder=\"Enter _id to fetch data\"\r\n          />\r\n        </Box>\r\n      </HStack>\r\n\r\n      {posts.length > 0 ? (\r\n        <List spacing={3}>\r\n          {posts.map((question, index) => (\r\n            <ListItem key={index}>{question}<br></br>\r\n             <input\r\n                className=\"space\"\r\n                type=\"text\"\r\n                placeholder=\"Digite sua resposta...\"\r\n                onChange={e =>setResposta(e.target.value)}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n          <button onClick={handleSubmit} >Enviar</button>\r\n        </List>\r\n      ) : (\r\n      \r\n        <Box textAlign=\"center\">Loading...</Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","HStack","Input","List","ListItem","React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","posts","setPosts","selectedId","setSelectedId","answers","setAnswers","fetchQuestions","id","response","get","questionList","data","map","post","selectedQuestions","question","pergunta","flat","error","console","handleIdChange","event","target","value","handleAnswerChange","index","answer","updatedAnswers","handleSubmit","document","querySelector","resposta","log","children","spacing","w","ml","mt","className","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","type","onClick","e","textAlign","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms - Copia/frontForms/src/App.js"],"sourcesContent":["import { Box, HStack, Input, List, ListItem } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  const [answers, setAnswers] = useState([]);\r\n  // console.log(answers)\r\n  \r\n  useEffect(() => {\r\n    if (selectedId) {\r\n      fetchQuestions(selectedId);\r\n    }\r\n  }, [selectedId]);\r\n\r\n  const fetchQuestions = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\r\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question.pergunta));\r\n      setPosts(questionList.flat()); // Flatten nested arrays if necessary\r\n    } catch (error) {\r\n      // Handle errors here (e.g., display an error message)\r\n      console.error(\"Error fetching questions:\", error);\r\n    }\r\n  };\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n  };\r\n\r\n  const handleAnswerChange = (index, answer) => {\r\n    // Access the answer object using the index\r\n    const updatedAnswers = [...answers];\r\n    updatedAnswers[index].answer = answer;\r\n    setAnswers(updatedAnswers);\r\n  };\r\n  \r\n\r\n  async function handleSubmit() {\r\n    const answers = posts.map((question, index) => ({\r\n      question,\r\n      answer: document.querySelector(`input[data-question-index=\"${index}\"]`).value,\r\n    }));\r\n    try {\r\n      await axios.post('http://localhost:8005/response', { resposta: answers });\r\n      console.log('Respostas salvas com sucesso!');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <HStack spacing={8}>\r\n        <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n          <Input\r\n            className=\"wrap-input\"\r\n            id=\"cpfInput\"\r\n            value={selectedId}\r\n            onChange={handleIdChange}\r\n            placeholder=\"Enter _id to fetch data\"\r\n          />\r\n        </Box>\r\n      </HStack>\r\n\r\n      {posts.length > 0 ? (\r\n        <List spacing={3}>\r\n          {posts.map((question, index) => (\r\n            <ListItem key={index}>{question}<br></br>\r\n           <input\r\n  className=\"space\"\r\n  type=\"text\"\r\n  placeholder=\"Digite sua resposta...\"\r\n  value={answers.answers || ''}\r\n  data-question-index={index}\r\n // Pass the answer object\r\n/>\r\n\r\n            </ListItem>\r\n          ))}\r\n          <button onClick={handleSubmit} >Enviar</button>\r\n          <button   onChange={(e) => handleAnswerChange( e.target.value)}>en</button>\r\n        </List>\r\n      ) : (\r\n      \r\n        <Box textAlign=\"center\">Loading...</Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n/*import { Box, HStack, Input, List, ListItem } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  const [resposta, setResposta] = useState('');\r\n   console.log(resposta)\r\n  \r\n  useEffect(() => {\r\n    if (selectedId) {\r\n      fetchQuestions(selectedId);\r\n    }\r\n  }, [selectedId]);\r\n\r\n  const fetchQuestions = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\r\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question.pergunta));\r\n      setPosts(questionList.flat()); // Flatten nested arrays if necessary\r\n    } catch (error) {\r\n      // Handle errors here (e.g., display an error message)\r\n      console.error(\"Error fetching questions:\", error);\r\n    }\r\n  };\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n  };\r\n\r\n\r\n\r\n\r\n  async function handleSubmit() {\r\n \r\n    const response = resposta\r\n  try{\r\n    await axios.post('http://localhost:8005/response', {  \r\n      resposta:response,\r\n    });\r\n      console.log('Respostas salvas com sucesso!');\r\n \r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <HStack spacing={8}>\r\n        <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n          <Input\r\n            className=\"wrap-input\"\r\n            id=\"cpfInput\"\r\n            value={selectedId}\r\n            onChange={handleIdChange}\r\n            placeholder=\"Enter _id to fetch data\"\r\n          />\r\n        </Box>\r\n      </HStack>\r\n\r\n      {posts.length > 0 ? (\r\n        <List spacing={3}>\r\n          {posts.map((question, index) => (\r\n            <ListItem key={index}>{question}<br></br>\r\n             <input\r\n                className=\"space\"\r\n                type=\"text\"\r\n                placeholder=\"Digite sua resposta...\"\r\n                onChange={e =>setResposta(e.target.value)}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n          <button onClick={handleSubmit} >Enviar</button>\r\n        </List>\r\n      ) : (\r\n      \r\n        <Box textAlign=\"center\">Loading...</Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;*/\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}