{"ast":null,"code":"/*import { Box, VStack, Input, Text } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  console.log(posts)\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  console.log(selectedId)\r\n\r\n  useEffect(() => {\r\n    if (selectedId) {\r\n      getUserById(selectedId);\r\n    }\r\n  }, [selectedId]);\r\n\r\n  const getUserById = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\r\n      const questionList = response.data.map((post) =>\r\n        post.selectedQuestions.map((question) => question.pergunta)\r\n      );\r\n      setPosts(questionList);\r\n    } catch (error) {\r\n      // Handle errors\r\n    }\r\n  };\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n    setPosts([]); // Clear previous questions when searching new ID\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <VStack spacing={8}>\r\n        <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n          <Input\r\n            className=\"wrap-input\"\r\n            id=\"cpfInput\"\r\n            value={selectedId}\r\n            onChange={handleIdChange}\r\n            placeholder=\"Enter _id to fetch data\"\r\n          />\r\n        </Box>\r\n\r\n        {posts.length > 0 && (\r\n          <>\r\n            <h2>Perguntas encontradas para o CPF:</h2>\r\n            <VStack spacing={4}>\r\n              {posts.map((question, index) => (\r\n                <Box key={index} borderWidth={1} borderRadius={4} p={4}>\r\n                \r\n                  <Text as=\"p\">{question}\r\n                  <Input type=\"text\" placeholder=\"Digite sua resposta aqui\" />\r\n                  </Text>\r\n                  <br />\r\n                </Box>\r\n              ))}\r\n            </VStack>\r\n          </>\r\n        )}\r\n      </VStack>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;*/","map":{"version":3,"names":[],"sources":["C:/Github/Formulario/Forms - Copia/frontForms/src/App.js"],"sourcesContent":["/*import { Box, VStack, Input, Text } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  console.log(posts)\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  console.log(selectedId)\r\n\r\n  useEffect(() => {\r\n    if (selectedId) {\r\n      getUserById(selectedId);\r\n    }\r\n  }, [selectedId]);\r\n\r\n  const getUserById = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\r\n      const questionList = response.data.map((post) =>\r\n        post.selectedQuestions.map((question) => question.pergunta)\r\n      );\r\n      setPosts(questionList);\r\n    } catch (error) {\r\n      // Handle errors\r\n    }\r\n  };\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n    setPosts([]); // Clear previous questions when searching new ID\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <VStack spacing={8}>\r\n        <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n          <Input\r\n            className=\"wrap-input\"\r\n            id=\"cpfInput\"\r\n            value={selectedId}\r\n            onChange={handleIdChange}\r\n            placeholder=\"Enter _id to fetch data\"\r\n          />\r\n        </Box>\r\n\r\n        {posts.length > 0 && (\r\n          <>\r\n            <h2>Perguntas encontradas para o CPF:</h2>\r\n            <VStack spacing={4}>\r\n              {posts.map((question, index) => (\r\n                <Box key={index} borderWidth={1} borderRadius={4} p={4}>\r\n                \r\n                  <Text as=\"p\">{question}\r\n                  <Input type=\"text\" placeholder=\"Digite sua resposta aqui\" />\r\n                  </Text>\r\n                  <br />\r\n                </Box>\r\n              ))}\r\n            </VStack>\r\n          </>\r\n        )}\r\n      </VStack>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;*/\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}