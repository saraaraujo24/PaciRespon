{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms - Copia\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import { Box, HStack, Input } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const url = \"http://localhost:8005/questions\";\r\n\r\n  const [posts, setPosts] = useState([]);\r\n      console.log(posts);\r\n\r\n\r\n      function getUser() {\r\n        axios.get(url)\r\n          .then((response) => {\r\n            setPosts(response.data);\r\n          })\r\n          .catch((error) => console.log(error));\r\n      }\r\n    \r\n    \r\n      useEffect(() => {\r\n        getUser()\r\n      }, []);\r\n    \r\n\r\n\r\n  return(\r\n    <div className=\"App\" >  \r\n    <div  className=\"Colum\"> \r\n      <div className=\"cont\">\r\n          <center><h2  >Selecionar Pergunta</h2></center>\r\n            <HStack spacing=\"8\">\r\n              <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n              \r\n                <Input\r\n                  className=\"wrap-input\"\r\n                  id=\"cpfInput\"\r\n                  onChange={(e) => (e.target.value)}\r\n                />                \r\n               \r\n              </Box>\r\n            \r\n            </HStack>\r\n      </div><br></br><br></br>\r\n          <div className=\"perguntas\">\r\n          {posts && posts.map((post) => (\r\n              <div key={post._id}>\r\n                <p>{post.cpf}</p>\r\n                <p>{post.pergunta}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default App*/\nimport { Box, HStack, Input } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [selectedId, setSelectedId] = useState(\"\");\n  console.log(posts);\n  useEffect(() => {\n    if (selectedId) {\n      getUserById(selectedId);\n    }\n  }, [selectedId]);\n  const getUserById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8005/questions/${id}`);\n      setPosts(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data by ID:\", error);\n    }\n  };\n  const handleIdChange = event => {\n    setSelectedId(event.target.value);\n    getUserById(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(HStack, {\n    spacing: 8,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      w: \"100%\",\n      ml: \"5%\",\n      mt: \"5%\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        className: \"wrap-input\",\n        id: \"cpfInput\",\n        value: selectedId,\n        onChange: handleIdChange,\n        placeholder: \"Enter _id to fetch data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J0NnNPmSXt/UbkdwOs+fONnKguE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","HStack","Input","React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","posts","setPosts","selectedId","setSelectedId","console","log","getUserById","id","response","get","data","error","handleIdChange","event","target","value","spacing","children","w","ml","mt","className","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms - Copia/frontForms/src/App.js"],"sourcesContent":["/*import { Box, HStack, Input } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const url = \"http://localhost:8005/questions\";\r\n\r\n  const [posts, setPosts] = useState([]);\r\n      console.log(posts);\r\n\r\n\r\n      function getUser() {\r\n        axios.get(url)\r\n          .then((response) => {\r\n            setPosts(response.data);\r\n          })\r\n          .catch((error) => console.log(error));\r\n      }\r\n    \r\n    \r\n      useEffect(() => {\r\n        getUser()\r\n      }, []);\r\n    \r\n\r\n\r\n  return(\r\n    <div className=\"App\" >  \r\n    <div  className=\"Colum\"> \r\n      <div className=\"cont\">\r\n          <center><h2  >Selecionar Pergunta</h2></center>\r\n            <HStack spacing=\"8\">\r\n              <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n              \r\n                <Input\r\n                  className=\"wrap-input\"\r\n                  id=\"cpfInput\"\r\n                  onChange={(e) => (e.target.value)}\r\n                />                \r\n               \r\n              </Box>\r\n            \r\n            </HStack>\r\n      </div><br></br><br></br>\r\n          <div className=\"perguntas\">\r\n          {posts && posts.map((post) => (\r\n              <div key={post._id}>\r\n                <p>{post.cpf}</p>\r\n                <p>{post.pergunta}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default App*/\r\nimport { Box, HStack, Input } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  console.log(posts)\r\n\r\n  useEffect(() => {\r\n   \r\n    if (selectedId) {\r\n      getUserById(selectedId);\r\n    }\r\n  }, [selectedId]);\r\n\r\n  const getUserById = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/questions/${id}`);\r\n      setPosts(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data by ID:\", error);\r\n     \r\n    }\r\n  };\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n    getUserById(event.target.value);\r\n  };\r\n\r\n  return (\r\n\r\n    <HStack spacing={8}>\r\n      <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n        <Input\r\n          className=\"wrap-input\"\r\n          id=\"cpfInput\"\r\n          value={selectedId}\r\n          onChange={handleIdChange}\r\n          placeholder=\"Enter _id to fetch data\"\r\n        />\r\n      </Box>\r\n    </HStack>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAG,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACrD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChDU,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAElBP,SAAS,CAAC,MAAM;IAEd,IAAIS,UAAU,EAAE;MACdI,WAAW,CAACJ,UAAU,CAAC;IACzB;EACF,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMI,WAAW,GAAG,MAAOC,EAAE,IAAK;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,mCAAkCF,EAAG,EAAC,CAAC;MACzEN,QAAQ,CAACO,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAEpD;EACF,CAAC;EAED,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChCV,aAAa,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACjCT,WAAW,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,oBAEElB,OAAA,CAACP,MAAM;IAAC0B,OAAO,EAAE,CAAE;IAAAC,QAAA,eACjBpB,OAAA,CAACR,GAAG;MAAC6B,CAAC,EAAC,MAAM;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAAAH,QAAA,eAC3BpB,OAAA,CAACN,KAAK;QACJ8B,SAAS,EAAC,YAAY;QACtBd,EAAE,EAAC,UAAU;QACbQ,KAAK,EAAEb,UAAW;QAClBoB,QAAQ,EAAEV,cAAe;QACzBW,WAAW,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAAC5B,EAAA,CAzCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}