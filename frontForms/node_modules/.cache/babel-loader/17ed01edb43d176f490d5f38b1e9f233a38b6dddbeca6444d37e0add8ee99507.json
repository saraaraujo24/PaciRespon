{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms - Copia\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Box, VStack, Input, Text } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [selectedId, setSelectedId] = useState(\"\");\n  useEffect(() => {\n    if (selectedId) {\n      getUserById(selectedId);\n    }\n  }, [selectedId]);\n  const getUserById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question.pergunta));\n      setPosts(questionList);\n    } catch (error) {\n      // Handle errors\n    }\n  };\n  const handleIdChange = event => {\n    setSelectedId(event.target.value);\n    setPosts([]); // Clear previous questions when searching new ID\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        ml: \"5%\",\n        mt: \"5%\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          className: \"wrap-input\",\n          id: \"cpfInput\",\n          value: selectedId,\n          onChange: handleIdChange,\n          placeholder: \"Enter _id to fetch data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), posts.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Perguntas encontradas para o CPF:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 4,\n          children: posts.map((question, index) => /*#__PURE__*/_jsxDEV(Box, {\n            borderWidth: 1,\n            borderRadius: 4,\n            p: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              as: \"h4\",\n              children: `Pergunta ${index + 1}:`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              as: \"p\",\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J0NnNPmSXt/UbkdwOs+fONnKguE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","VStack","Input","Text","React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","selectedId","setSelectedId","getUserById","id","response","get","questionList","data","map","post","selectedQuestions","question","pergunta","error","handleIdChange","event","target","value","children","spacing","w","ml","mt","className","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","index","borderWidth","borderRadius","p","as","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms - Copia/frontForms/src/App.js"],"sourcesContent":["import { Box, VStack, Input, Text } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (selectedId) {\r\n      getUserById(selectedId);\r\n    }\r\n  }, [selectedId]);\r\n\r\n  const getUserById = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\r\n      const questionList = response.data.map((post) =>\r\n        post.selectedQuestions.map((question) => question.pergunta)\r\n      );\r\n      setPosts(questionList);\r\n    } catch (error) {\r\n      // Handle errors\r\n    }\r\n  };\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n    setPosts([]); // Clear previous questions when searching new ID\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <VStack spacing={8}>\r\n        <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n          <Input\r\n            className=\"wrap-input\"\r\n            id=\"cpfInput\"\r\n            value={selectedId}\r\n            onChange={handleIdChange}\r\n            placeholder=\"Enter _id to fetch data\"\r\n          />\r\n        </Box>\r\n\r\n        {posts.length > 0 && (\r\n          <>\r\n            <h2>Perguntas encontradas para o CPF:</h2>\r\n            <VStack spacing={4}>\r\n              {posts.map((question, index) => (\r\n                <Box key={index} borderWidth={1} borderRadius={4} p={4}>\r\n                  <div as=\"h4\">{`Pergunta ${index + 1}:`}</div>\r\n                  <div as=\"p\">{question}</div>\r\n                </Box>\r\n              ))}\r\n            </VStack>\r\n          </>\r\n        )}\r\n      </VStack>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}