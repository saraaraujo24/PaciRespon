{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms - Copia\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Box, HStack, Input, Text } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //const [posts, setPosts] = useState([]);\n\n  const [selectedId, setSelectedId] = useState(\"\");\n  useEffect(() => {\n    if (selectedId) {\n      getUserById(selectedId);\n    }\n  }, [selectedId]);\n\n  /*const getUserById = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\r\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question.pergunta));\r\n      setPosts(questionList); // Now posts holds an array of question arrays\r\n    } catch (error) {\r\n      // Handle errors\r\n    }\r\n  };\r\n  */\n\n  const getUserById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\n      const questions = response.data.map(post => post.selectedQuestions.map(question => question));\n\n      // Render questions directly instead of storing them\n      questions.forEach((question, index) => {\n        // Create elements for each question (e.g., Box, Text)\n        // Add unique keys for React\n        // Append elements to the DOM using libraries like ReactDOM\n      });\n    } catch (error) {\n      // Handle errors\n    }\n  };\n  const handleIdChange = event => {\n    setSelectedId(event.target.value);\n    getUserById(event.target.value);\n  };\n  const ListRow = ({\n    index,\n    data\n  }) => {\n    const question = data[index];\n    console.log(ListRow);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      m: 4,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        as: \"h4\",\n        children: `Pergunta ${index + 1}:`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 8,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        ml: \"5%\",\n        mt: \"5%\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          className: \"wrap-input\",\n          id: \"cpfInput\",\n          value: selectedId,\n          onChange: handleIdChange,\n          placeholder: \"Enter _id to fetch data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onChange: ListRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UsHBRUCbnn6wWG6m4ga8yv6sCHM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","HStack","Input","Text","React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","selectedId","setSelectedId","getUserById","id","response","get","questions","data","map","post","selectedQuestions","question","forEach","index","error","handleIdChange","event","target","value","ListRow","console","log","m","children","as","fileName","_jsxFileName","lineNumber","columnNumber","spacing","w","ml","mt","className","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms - Copia/frontForms/src/App.js"],"sourcesContent":["import { Box, HStack, Input,Text } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  //const [posts, setPosts] = useState([]);\r\n\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  \r\n\r\n  useEffect(() => {\r\n   \r\n    if (selectedId) {\r\n      getUserById(selectedId);\r\n    }\r\n  }, [selectedId]);\r\n\r\n  /*const getUserById = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\r\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question.pergunta));\r\n      setPosts(questionList); // Now posts holds an array of question arrays\r\n    } catch (error) {\r\n      // Handle errors\r\n    }\r\n  };\r\n*/\r\n\r\nconst getUserById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\r\n    const questions = response.data.map((post) => post.selectedQuestions.map((question) => question));\r\n\r\n    // Render questions directly instead of storing them\r\n    questions.forEach((question, index) => {\r\n      // Create elements for each question (e.g., Box, Text)\r\n      // Add unique keys for React\r\n      // Append elements to the DOM using libraries like ReactDOM\r\n    });\r\n  } catch (error) {\r\n    // Handle errors\r\n  }\r\n};\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n    getUserById(event.target.value);\r\n  };\r\n\r\n  const ListRow = ({ index, data }) => {\r\n    const question = data[index];\r\nconsole.log(ListRow)\r\n\r\n    return (\r\n      <Box m={4}>\r\n        <Text as=\"h4\">{`Pergunta ${index + 1}:`}</Text>\r\n        <Text as=\"p\">{question}</Text>\r\n      </Box>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n    <HStack spacing={8}>\r\n          <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n            <Input\r\n              className=\"wrap-input\"\r\n              id=\"cpfInput\"\r\n              value={selectedId}\r\n              onChange={handleIdChange}\r\n              placeholder=\"Enter _id to fetch data\"\r\n            />\r\n          </Box>\r\n          <div onChange={ListRow}></div>\r\n        </HStack>\r\n        \r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}