{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms - Copia\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Box, VStack, Input, Textarea, Button, Text } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [selectedId, setSelectedId] = useState(\"\");\n  const [currentQuestion, setCurrentQuestion] = useState(null); // Track current question\n  const [answer, setAnswer] = useState(\"\"); // Store user's answer\n  const [showAnswerSection, setShowAnswerSection] = useState(false); // Control answer section visibility\n\n  useEffect(() => {\n    if (selectedId) {\n      getUserById(selectedId);\n    }\n  }, [selectedId]);\n  const getUserById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8005/questions/${id}`);\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question));\n      setPosts(questionList);\n      setCurrentQuestion(questionList[0]); // Start with the first question\n      setShowAnswerSection(true); // Initially show answer section\n    } catch (error) {\n      // Handle errors\n    }\n  };\n  const handleIdChange = event => {\n    setSelectedId(event.target.value);\n    setPosts([]); // Clear previous questions\n    setCurrentQuestion(null);\n    setAnswer(\"\");\n    setShowAnswerSection(false); // Hide answer section until questions fetched\n  };\n  const handleSubmitAnswer = async () => {\n    try {\n      // Replace with your actual answer submission logic\n      // Here's an example using a mock API endpoint:\n      await axios.post(`http://localhost:8005/perguntas/${currentQuestion._id}/answer`, {\n        answer\n      });\n      const remainingQuestions = posts.filter(q => q !== currentQuestion);\n      setPosts(remainingQuestions);\n      setCurrentQuestion(remainingQuestions[0]); // Move to next question\n      setAnswer(\"\");\n\n      // Optionally, display a success message or provide other feedback\n    } catch (error) {\n      // Handle errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        ml: \"5%\",\n        mt: \"5%\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          className: \"wrap-input\",\n          id: \"cpfInput\",\n          value: selectedId,\n          onChange: handleIdChange,\n          placeholder: \"Enter _id to fetch data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), currentQuestion &&\n      /*#__PURE__*/\n      // Render only when a question is available\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          m: \"5\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            as: \"h2\",\n            children: `Pergunta ${posts.indexOf(currentQuestion) + 1}:`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            as: \"p\",\n            children: currentQuestion.pergunta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), showAnswerSection &&\n        /*#__PURE__*/\n        // Show answer section if necessary\n        _jsxDEV(VStack, {\n          spacing: 4,\n          mt: 4,\n          children: [/*#__PURE__*/_jsxDEV(Textarea, {\n            value: answer\n            //onChange={handleAnswerChange}\n            ,\n            placeholder: \"Insira sua resposta aqui\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmitAnswer,\n            children: \"Responder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1d7uXw8gfXg/ErVVRnGADZxP6dE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","VStack","Input","Textarea","Button","Text","React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","selectedId","setSelectedId","currentQuestion","setCurrentQuestion","answer","setAnswer","showAnswerSection","setShowAnswerSection","getUserById","id","response","get","questionList","data","map","post","selectedQuestions","question","error","handleIdChange","event","target","value","handleSubmitAnswer","_id","remainingQuestions","filter","q","children","spacing","w","ml","mt","className","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","m","as","indexOf","pergunta","onClick","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms - Copia/frontForms/src/App.js"],"sourcesContent":["import { Box, VStack, Input, Textarea, Button,Text } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  const [currentQuestion, setCurrentQuestion] = useState(null); // Track current question\r\n  const [answer, setAnswer] = useState(\"\"); // Store user's answer\r\n  const [showAnswerSection, setShowAnswerSection] = useState(false); // Control answer section visibility\r\n\r\n  useEffect(() => {\r\n    if (selectedId) {\r\n      getUserById(selectedId);\r\n    }\r\n  }, [selectedId]);\r\n\r\n  const getUserById = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/questions/${id}`);\r\n      const questionList = response.data.map((post) =>\r\n        post.selectedQuestions.map((question) => question)\r\n      );\r\n      setPosts(questionList);\r\n      setCurrentQuestion(questionList[0]); // Start with the first question\r\n      setShowAnswerSection(true); // Initially show answer section\r\n    } catch (error) {\r\n      // Handle errors\r\n    }\r\n  };\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n    setPosts([]); // Clear previous questions\r\n    setCurrentQuestion(null);\r\n    setAnswer(\"\");\r\n    setShowAnswerSection(false); // Hide answer section until questions fetched\r\n  };\r\n\r\n  const handleSubmitAnswer = async () => {\r\n    try {\r\n      // Replace with your actual answer submission logic\r\n      // Here's an example using a mock API endpoint:\r\n      await axios.post(`http://localhost:8005/perguntas/${currentQuestion._id}/answer`, {\r\n        answer,\r\n      });\r\n\r\n      const remainingQuestions = posts.filter(q => q !== currentQuestion);\r\n      setPosts(remainingQuestions);\r\n      setCurrentQuestion(remainingQuestions[0]); // Move to next question\r\n      setAnswer(\"\");\r\n\r\n      // Optionally, display a success message or provide other feedback\r\n    } catch (error) {\r\n      // Handle errors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <VStack spacing={8}>\r\n        <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n          <Input\r\n            className=\"wrap-input\"\r\n            id=\"cpfInput\"\r\n            value={selectedId}\r\n            onChange={handleIdChange}\r\n            placeholder=\"Enter _id to fetch data\"\r\n          />\r\n        </Box>\r\n\r\n        {currentQuestion && ( // Render only when a question is available\r\n          <>\r\n            <Box m=\"5\">\r\n              <Text as=\"h2\">{`Pergunta ${posts.indexOf(currentQuestion) + 1}:`}</Text>\r\n              <Text as=\"p\">{currentQuestion.pergunta}</Text>\r\n            </Box>\r\n\r\n            {showAnswerSection && ( // Show answer section if necessary\r\n              <VStack spacing={4} mt={4}>\r\n                <Textarea\r\n                  value={answer}\r\n                  //onChange={handleAnswerChange}\r\n                  placeholder=\"Insira sua resposta aqui\"\r\n                />\r\n                <Button onClick={handleSubmitAnswer}>Responder</Button>\r\n              </VStack>\r\n            )}\r\n          </>\r\n        )}\r\n      </VStack>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}