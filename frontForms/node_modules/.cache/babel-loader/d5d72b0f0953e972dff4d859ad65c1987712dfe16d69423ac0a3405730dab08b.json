{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms - Copia\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Box, HStack, Input, List, ListItem, Button } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [_id, setSelectedId] = useState(\"\");\n  console.log(posts);\n  const [answers, setAnswers] = useState([]); // State to store answers\n  const isSubmitDisabled = answers.some(a => !a.trim()); // Disable button if any answer is empty\n  const answersRefs = useRef([]);\n  useEffect(() => {\n    answersRefs.current = Array(posts.length).fill(null); // Initialize refs\n  }, [posts]);\n  useEffect(() => {\n    if (_id) {\n      fetchQuestions(_id);\n    }\n  }, [_id]);\n  const fetchQuestions = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question.pergunta));\n      const infoPaci = response.data.map(infoPaciente => infoPaciente.infoPaciente.map(info => info.informacao));\n      setPosts(infoPaci.flat());\n      setPosts(questionList.flat());\n      setAnswers(Array(questionList.length).fill(\"\")); // Initialize answers with empty strings\n    } catch (error) {\n      // Handle errors here\n    }\n  };\n  const handleIdChange = event => {\n    setSelectedId(event.target.value);\n  };\n  const handleAnswerChange = (index, answer) => {\n    setAnswers(prevAnswers => [...prevAnswers.slice(0, index), answer, ...prevAnswers.slice(index + 1)]);\n  };\n  async function handleSubmit() {\n    const selectedId = _id; // Assuming _id is used for identification\n\n    const dataToSend = posts.map((pergunta, index) => ({\n      pergunta: pergunta,\n      // Use corrected field name 'pergunta'\n      resposta: answers[index]\n    }));\n    try {\n      const response = await axios.post(\"http://localhost:8005/response\", {\n        _id: selectedId,\n        responses: dataToSend\n      });\n      console.log(\"Respostas salvas com sucesso!\", response.data);\n      // Handle success, e.g., clear form, show confirmation message\n    } catch (error) {\n      console.error(error);\n      // Handle errors, e.g., display error messages\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 8,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        ml: \"5%\",\n        mt: \"5%\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          className: \"wrap-input\",\n          id: \"cpfInput\",\n          value: _id,\n          onChange: handleIdChange,\n          placeholder: \"Enter _id to fetch data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n      spacing: 3,\n      children: [posts.map((question, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [question, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: answersRefs.current[index] // Attach ref for uncontrolled input\n          ,\n          value: answers[index],\n          onChange: e => handleAnswerChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        isDisabled: isSubmitDisabled,\n        onClick: handleSubmit,\n        children: \"Enviar Todas as Respostas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), posts.map((info, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [info, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O9oss2lXmWiexL6EUCS8QLgMdp8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","HStack","Input","List","ListItem","Button","React","useEffect","useState","axios","useRef","jsxDEV","_jsxDEV","App","_s","posts","setPosts","_id","setSelectedId","console","log","answers","setAnswers","isSubmitDisabled","some","a","trim","answersRefs","current","Array","length","fill","fetchQuestions","id","response","get","questionList","data","map","post","selectedQuestions","question","pergunta","infoPaci","infoPaciente","info","informacao","flat","error","handleIdChange","event","target","value","handleAnswerChange","index","answer","prevAnswers","slice","handleSubmit","selectedId","dataToSend","resposta","responses","children","spacing","w","ml","mt","className","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","e","isDisabled","onClick","textAlign","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms - Copia/frontForms/src/App.js"],"sourcesContent":["\r\nimport { Box, HStack, Input, List, ListItem, Button } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useRef } from \"react\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [_id, setSelectedId] = useState(\"\");\r\n  console.log(posts)\r\n  const [answers, setAnswers] = useState([]); // State to store answers\r\n  const isSubmitDisabled = answers.some((a) => !a.trim()); // Disable button if any answer is empty\r\n  const answersRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    answersRefs.current = Array(posts.length).fill(null); // Initialize refs\r\n  }, [posts]);\r\n\r\n  useEffect(() => {\r\n    if (_id) {\r\n      fetchQuestions(_id);\r\n    }\r\n  }, [_id]);\r\n\r\n  const fetchQuestions = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/perguntas/${id}`);\r\n      const questionList = response.data.map((post) =>\r\n        post.selectedQuestions.map((question) => question.pergunta)\r\n        );\r\n      const infoPaci = response.data.map((infoPaciente) =>\r\n        infoPaciente.infoPaciente.map((info) => info.informacao)\r\n      );\r\n      setPosts(infoPaci.flat());\r\n      setPosts(questionList.flat());\r\n      setAnswers(Array(questionList.length).fill(\"\")); // Initialize answers with empty strings\r\n    } catch (error) {\r\n      // Handle errors here\r\n    }\r\n  };\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n  };\r\n\r\n  const handleAnswerChange = (index, answer) => {\r\n    setAnswers((prevAnswers) => [\r\n      ...prevAnswers.slice(0, index),\r\n      answer,\r\n      ...prevAnswers.slice(index + 1),\r\n    ]);\r\n  };\r\n\r\n  async function handleSubmit() {\r\n    const selectedId = _id ; // Assuming _id is used for identification\r\n\r\n    const dataToSend = posts.map((pergunta, index) => ({\r\n      pergunta: pergunta, // Use corrected field name 'pergunta'\r\n      resposta: answers[index],\r\n    }));\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8005/response\", {\r\n        _id: selectedId,\r\n        responses: dataToSend,\r\n      });\r\n\r\n      console.log(\"Respostas salvas com sucesso!\", response.data);\r\n      // Handle success, e.g., clear form, show confirmation message\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle errors, e.g., display error messages\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HStack spacing={8}>\r\n        <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n          <Input\r\n            className=\"wrap-input\"\r\n            id=\"cpfInput\"\r\n            value={_id}\r\n            onChange={handleIdChange}\r\n            placeholder=\"Enter _id to fetch data\"\r\n          />\r\n        </Box>\r\n      </HStack>\r\n\r\n      {posts.length > 0 ? (\r\n        <List spacing={3}>\r\n          {posts.map((question,index) => (\r\n            <ListItem key={index}>\r\n              {question}\r\n            \r\n              <br />\r\n              <Input\r\n                type={answersRefs.current[index]} // Attach ref for uncontrolled input\r\n                value={answers[index]}\r\n                onChange={(e) => handleAnswerChange(index, e.target.value)}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n          <Button isDisabled={isSubmitDisabled} onClick={handleSubmit}>\r\n            Enviar Todas as Respostas\r\n          </Button>\r\n        </List>\r\n      ) : (\r\n        <Box textAlign=\"center\">Loading...</Box>\r\n      )}\r\n         {posts.map((info,index) => (\r\n            <div key={index}>\r\n              {info}\r\n            \r\n              <br />\r\n           \r\n            </div>\r\n          ))}\r\n        \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}