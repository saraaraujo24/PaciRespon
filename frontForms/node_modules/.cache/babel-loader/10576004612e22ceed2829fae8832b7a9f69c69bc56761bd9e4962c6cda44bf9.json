{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms - Copia\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Box, HStack, Input } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedCpf, setSelectedCpf] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    if (selectedCpf) {\n      getUserById(selectedCpf);\n    }\n  }, [selectedCpf]);\n  const getUserById = async cpf => {\n    try {\n      const response = await axios.get(`http://localhost:8005/questions?cpf=${cpf}`); // Fetch questions based on CPF\n\n      if (response.data.length === 0) {\n        setPosts([]); // Set posts to empty array if no questions found\n        return;\n      }\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question.pergunta));\n      setPosts(questionList);\n    } catch (error) {\n      // Handle errors\n    }\n  };\n  const handleCpfChange = event => {\n    setSelectedCpf(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 8,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        ml: \"5%\",\n        mt: \"5%\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          className: \"wrap-input\",\n          id: \"cpfInput\",\n          placeholder: \"Enter CPF\",\n          value: selectedCpf,\n          onChange: handleCpfChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"perguntas\",\n      children: posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhuma pergunta encontrada para o CPF pesquisado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : posts.map((questionArray, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Pergunta \", index + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: questionArray[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ymfL+FzgEN6SaORI0N8GS/vNX7M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","HStack","Input","React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","selectedCpf","setSelectedCpf","posts","setPosts","getUserById","cpf","response","get","data","length","questionList","map","post","selectedQuestions","question","pergunta","error","handleCpfChange","event","target","value","children","spacing","w","ml","mt","type","className","id","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","questionArray","index","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms - Copia/frontForms/src/App.js"],"sourcesContent":["import { Box, HStack, Input } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [selectedCpf, setSelectedCpf] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCpf) {\r\n      getUserById(selectedCpf);\r\n    }\r\n  }, [selectedCpf]);\r\n\r\n  const getUserById = async (cpf) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/questions?cpf=${cpf}`); // Fetch questions based on CPF\r\n\r\n      if (response.data.length === 0) {\r\n        setPosts([]); // Set posts to empty array if no questions found\r\n        return;\r\n      }\r\n\r\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question.pergunta));\r\n      setPosts(questionList);\r\n    } catch (error) {\r\n      // Handle errors\r\n    }\r\n  };\r\n\r\n  const handleCpfChange = (event) => {\r\n    setSelectedCpf(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HStack spacing={8}>\r\n        <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n          <Input\r\n            type=\"text\"\r\n            className=\"wrap-input\"\r\n            id=\"cpfInput\"\r\n            placeholder=\"Enter CPF\"\r\n            value={selectedCpf}\r\n            onChange={handleCpfChange}\r\n          />\r\n        </Box>\r\n      </HStack>\r\n\r\n      <div className=\"perguntas\">\r\n        {posts.length === 0 ? (\r\n          <p>Nenhuma pergunta encontrada para o CPF pesquisado.</p>\r\n        ) : (\r\n          posts.map((questionArray, index) => (\r\n            <div key={index}>\r\n              <h2>Pergunta {index + 1}:</h2>\r\n              <p>{questionArray[0]}</p>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}