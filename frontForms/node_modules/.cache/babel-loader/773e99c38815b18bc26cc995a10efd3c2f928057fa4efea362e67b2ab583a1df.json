{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms - Copia\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Box, Input, VStack } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [selectedId, setSelectedId] = useState(\"\");\n  const [questionIds, setQuestionIds] = useState([]);\n  console.log(posts);\n  useEffect(() => {\n    if (selectedId) {\n      getUserById(selectedId);\n    }\n  }, [selectedId]);\n  const getUserById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8005/questions/${id}`);\n      const extractedIds = response.data.map(post => post.selectedQuestions.map(question => question._id) // Retrieve question IDs\n      ).flat(); // Flatten the nested array\n      setPosts(response.data); // Set questions for rendering\n      setQuestionIds(extractedIds); // Update question IDs\n    } catch (error) {\n      // Handle errors\n    }\n  };\n  const handleIdChange = event => {\n    setSelectedId(event.target.value);\n    setPosts([]); // Clear previous questions\n    setQuestionIds([]); // Clear previous IDs\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        ml: \"5%\",\n        mt: \"5%\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          className: \"wrap-input\",\n          id: \"cpfInput\",\n          value: selectedId,\n          onChange: handleIdChange,\n          placeholder: \"Enter _id to fetch data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), posts.length > 0 &&\n      /*#__PURE__*/\n      // Render questions only if available\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Perguntas encontradas para o CPF :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 2,\n          children: questionIds.map(id => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: id\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), posts.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"perguntas\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Pergunta \", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q9aqQ0nW9tt5kfAA5caZcZ07hZ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","Input","VStack","React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","posts","setPosts","selectedId","setSelectedId","questionIds","setQuestionIds","console","log","getUserById","id","response","get","extractedIds","data","map","post","selectedQuestions","question","_id","flat","error","handleIdChange","event","target","value","children","spacing","w","ml","mt","className","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","index","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms - Copia/frontForms/src/App.js"],"sourcesContent":["import { Box, Input,VStack } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  const [questionIds, setQuestionIds] = useState([]);\r\n\r\n  console.log(posts)\r\n\r\n  useEffect(() => {\r\n   \r\n    if (selectedId) {\r\n      getUserById(selectedId);\r\n    }\r\n  }, [selectedId]);\r\n\r\n  const getUserById = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/questions/${id}`);\r\n      const extractedIds = response.data.map((post) =>\r\n        post.selectedQuestions.map((question) => question._id) // Retrieve question IDs\r\n      ).flat(); // Flatten the nested array\r\n      setPosts(response.data); // Set questions for rendering\r\n      setQuestionIds(extractedIds); // Update question IDs\r\n    } catch (error) {\r\n      // Handle errors\r\n    }\r\n  };\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n    setPosts([]); // Clear previous questions\r\n    setQuestionIds([]); // Clear previous IDs\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n    <VStack spacing={8}>\r\n          <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n            <Input\r\n              className=\"wrap-input\"\r\n              id=\"cpfInput\"\r\n              value={selectedId}\r\n              onChange={handleIdChange}\r\n              placeholder=\"Enter _id to fetch data\"\r\n            />\r\n          </Box>\r\n        {posts.length > 0 && ( // Render questions only if available\r\n        <div >\r\n          <h2>Perguntas encontradas para o CPF :</h2>\r\n          <VStack spacing={2}>\r\n          {questionIds.map((id) => (\r\n                <div key={id}>{id}</div>\r\n              ))}\r\n            </VStack>\r\n            \r\n          {posts.map((question, index) => (\r\n            <div className=\"perguntas\" key={index}  >\r\n              <h4>Pergunta {index + 1}:</h4>\r\n              <p>{question }</p>\r\n          </div>\r\n         \r\n          ))}\r\n           </div>\r\n      )}\r\n         \r\n     </VStack>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}