{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Formulario\\\\Forms - Copia\\\\frontForms\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Box, VStack, Input, Textarea, Button } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [selectedId, setSelectedId] = useState(\"\");\n  const [selectedQuestion, setSelectedQuestion] = useState(null); // Track selected question\n  const [answer, setAnswer] = useState(\"\"); // Store user's answer\n\n  useEffect(() => {\n    if (selectedId) {\n      getUserById(selectedId);\n    }\n  }, [selectedId]);\n  const getUserById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8005/questions/${id}`);\n      const questionList = response.data.map(post => post.selectedQuestions.map(question => question));\n      setPosts(questionList);\n    } catch (error) {\n      // Handle errors\n    }\n  };\n  const handleIdChange = event => {\n    setSelectedId(event.target.value);\n    setSelectedQuestion(null); // Reset selected question when searching new ID\n    setAnswer(\"\"); // Clear answer when switching questions\n  };\n  const handleQuestionClick = question => {\n    setSelectedQuestion(question); // Set selected question for answer input\n  };\n  const handleAnswerChange = event => {\n    setAnswer(event.target.value);\n  };\n  const handleSubmitAnswer = async () => {\n    try {\n      // Replace with your actual answer submission logic\n      // Here's an example using a mock API endpoint:\n      await axios.post(`http://localhost:8005/questions/${selectedQuestion._id}/answer`, {\n        answer\n      });\n\n      // Clear answer after submission\n      setAnswer(\"\");\n      // Optionally, display a success message or provide other feedback\n    } catch (error) {\n      // Handle errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        ml: \"5%\",\n        mt: \"5%\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          className: \"wrap-input\",\n          id: \"cpfInput\",\n          value: selectedId,\n          onChange: handleIdChange,\n          placeholder: \"Enter _id to fetch data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), posts.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Perguntas encontradas para o CPF:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 4,\n          children: posts.map((question, index) => /*#__PURE__*/_jsxDEV(Box, {\n            onClick: () => handleQuestionClick(question),\n            bg: selectedQuestion === question ? \"gray.200\" : \"white\",\n            p: 2,\n            cursor: \"pointer\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Pergunta \", index + 1, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.pergunta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), selectedQuestion &&\n        /*#__PURE__*/\n        // Only show answer section if a question is selected\n        _jsxDEV(VStack, {\n          spacing: 4,\n          mt: 4,\n          children: [/*#__PURE__*/_jsxDEV(Textarea, {\n            value: answer,\n            onChange: handleAnswerChange,\n            placeholder: \"Insira sua resposta aqui\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmitAnswer,\n            children: \"Responder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ddcxQdibIsYytyylzSGNfonOHec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Box","VStack","Input","Textarea","Button","React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","selectedId","setSelectedId","selectedQuestion","setSelectedQuestion","answer","setAnswer","getUserById","id","response","get","questionList","data","map","post","selectedQuestions","question","error","handleIdChange","event","target","value","handleQuestionClick","handleAnswerChange","handleSubmitAnswer","_id","children","spacing","w","ml","mt","className","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","index","onClick","bg","p","cursor","pergunta","_c","$RefreshReg$"],"sources":["C:/Github/Formulario/Forms - Copia/frontForms/src/App.js"],"sourcesContent":["import { Box, VStack, Input, Textarea, Button } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedId, setSelectedId] = useState(\"\");\r\n  const [selectedQuestion, setSelectedQuestion] = useState(null); // Track selected question\r\n  const [answer, setAnswer] = useState(\"\"); // Store user's answer\r\n\r\n  useEffect(() => {\r\n    if (selectedId) {\r\n      getUserById(selectedId);\r\n    }\r\n  }, [selectedId]);\r\n\r\n  const getUserById = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8005/questions/${id}`);\r\n      const questionList = response.data.map((post) =>\r\n        post.selectedQuestions.map((question) => question)\r\n      );\r\n      setPosts(questionList);\r\n    } catch (error) {\r\n      // Handle errors\r\n    }\r\n  };\r\n\r\n  const handleIdChange = (event) => {\r\n    setSelectedId(event.target.value);\r\n    setSelectedQuestion(null); // Reset selected question when searching new ID\r\n    setAnswer(\"\"); // Clear answer when switching questions\r\n  };\r\n\r\n  const handleQuestionClick = (question) => {\r\n    setSelectedQuestion(question); // Set selected question for answer input\r\n  };\r\n\r\n  const handleAnswerChange = (event) => {\r\n    setAnswer(event.target.value);\r\n  };\r\n\r\n  const handleSubmitAnswer = async () => {\r\n    try {\r\n      // Replace with your actual answer submission logic\r\n      // Here's an example using a mock API endpoint:\r\n      await axios.post(`http://localhost:8005/questions/${selectedQuestion._id}/answer`, {\r\n        answer,\r\n      });\r\n\r\n      // Clear answer after submission\r\n      setAnswer(\"\");\r\n      // Optionally, display a success message or provide other feedback\r\n    } catch (error) {\r\n      // Handle errors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <VStack spacing={8}>\r\n        <Box w=\"100%\" ml=\"5%\" mt=\"5%\">\r\n          <Input\r\n            className=\"wrap-input\"\r\n            id=\"cpfInput\"\r\n            value={selectedId}\r\n            onChange={handleIdChange}\r\n            placeholder=\"Enter _id to fetch data\"\r\n          />\r\n        </Box>\r\n\r\n        {posts.length > 0 && (\r\n          <>\r\n            <h2>Perguntas encontradas para o CPF:</h2>\r\n            <VStack spacing={4}>\r\n              {posts.map((question, index) => (\r\n                <Box\r\n                  key={index}\r\n                  onClick={() => handleQuestionClick(question)}\r\n                  bg={selectedQuestion === question ? \"gray.200\" : \"white\"}\r\n                  p={2}\r\n                  cursor=\"pointer\"\r\n                >\r\n                  <h4>Pergunta {index + 1}:</h4>\r\n                  <p>{question.pergunta}</p>\r\n                </Box>\r\n              ))}\r\n            </VStack>\r\n\r\n            {selectedQuestion && ( // Only show answer section if a question is selected\r\n              <VStack spacing={4} mt={4}>\r\n                <Textarea\r\n                  value={answer}\r\n                  onChange={handleAnswerChange}\r\n                  placeholder=\"Insira sua resposta aqui\"\r\n                />\r\n                <Button onClick={handleSubmitAnswer}>Responder</Button>\r\n              </VStack>\r\n            )}\r\n          </>\r\n        )}\r\n      </VStack>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}